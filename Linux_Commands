1. Man <commmand> - go to Manual.
2. ls - list all the file a folder contains
3. cd- change directory

4. mdkir foldr name- make a folder
   mkdir -p foder name/nested folder- use to make nested folder

5. rmdir folder name- remove a folder(folder must be empty)
   rm -rf folder name(remove folder with files)

6. cd .. - back to the home folder

7. pwd- present working directory

8. touch file name - create an empty file

9. mv file name folder name - will move file to that folder

10. cp file name folder name -copy a file into a folder
    cp -r folder1_name folder_name2 - copying a folder1 into folder 2  

11. open file name - open a file 

12. find- used to find files or folders matching a particular search pattern.
 i)   find . -type f -name file name (find file)
ii)  find . -type d -name directory name (find directories) 
iii) find . -type l -name link name (search link)

13. ln - create link
    ln <original> link (hard link created) :  delete the original file, link will still work
    ln -s <original> link(soft link created): delete the original file,link will be broken 

14.i)gzip filename - will compress the file, create .gz file and delete original file
   
   ii) gzip -<number>filename
       1 - worst but fastest
       9 -best but slowest

   iii) gzip -c filename > filename.gz : create .gz file without deleting original file
    
   iv) gzip -r foldername : compress all the file in a directory
   
   v) gzip -d filename.gz  : decompress the file
   
   15). gunzip- basically gzip command except -d option always enabled :gunzip filename.gz

     gunzip -c filename.z > anotherfilename  : extract to differemt filesname using output redirecton(>) using -c option

16). tar(tape archive) : use to create an archive grouping file into single file

     i) tar -cf archive.tar file1 file2  : c option stands for create. The f option is used to write to file the archive.

      ii) tar -xf archive.tar   : extract file from archive

      iii) tar -xf archive.tar -C directory  :to extract them to a specific directory

      iv) tar -czf archive.tar.gz file1 file2  :tar is often used to create a compressed archive, gzipping the archive.
              like creating a tar archive, and then running gzip on it.

      v) tar -xf archive.tar.gz  :To unarchive a gzipped archive

17). Alias - ls -al --print something more useful than alone ls command

      alias ll='ls -al' -:create a new command, for example I like to call it ll.

      The alias will work until the terminal session is closed.

18). cat :prints a file's content to the standard output.
     cat file1 file2 > file3  :concatenate the content of multiple files into a new file
     cat -n file1 :see the line with line numbers.

19)  less <filename>  : shows you the content stored inside a file.Press q to quit.

20) tail -- tail -n 10 <filename> :can print the last 10 lines in a file.
            tail -f filename : opens the file at the end, and watches for file changes.

21). wc -   wc command gives us useful information about a file or input it receives via pipes. 
            wc <filename> : The first column returned is the number of lines. The second is the number of words. The third is the number of bytes.

22). grep(global regular expression print): search in files, or combine it with pipes to filter the output of another command.

23). i) sort file.txt ----helps to sort the item of the file

      ii) sort -r filename.txt--- reverse the order
      
      iii) Sorting by default is case sensitive, and alphabetic. Use the --ignore-case option to sort case insensitive, and -n option to sort a numeric order.
          
      iv) sort -u file.txt--- Remove any duplicate in the file

24). i) uniq ---- a command useful to sort lines of text.

     ii) sort filename.txt | uniq :: uniq  will only detect adjacent duplicate lines.This implies that you will most likely use it along with sort
     
     iii) sort filename.txt | uniq -d :: only display duplicate lines
 
     iv) sort filename.txt | uniq -u  :: only display non-duplicate lines

     v) sort filename.txt | uniq -c :: count the occurence of each lines 

     vi) sort filename.txt | uniq -c | sort -nr :: sort lines by most frequent

25). diff file1.txt file2.txt ---  diff  will process the 2 files and will tell you what's the difference.

     diff file1.txt file2.txt -y --- compare 2 file line by line

26) i) echo  = prints to the output the argument passed to it

    ii) echo "hello" >> output.txt  = append output ex. "hello" to a file name output.txt

    iii) echo {1..5} = generate a list of strings

    iv) special characters need to be escaped with a backslash \  ex. echo the cost is \$5

    v)  echo "The path variable is $PATH" = interpolate environment variables
    
    vi) echo * = echo the files in the current folder

    vii) echo o* = echo the files in the current folder that start with the letter o

    ix) echo ~ = print your home folder path

    x) echo "$(ls -al)" = execute commands, and print the result to the standard output

27)  i)  sudo chown <owner> <file> :Change ownership of a file form root user to anothet user, example: chown flavio test.txt

    ii) chown -R <owner> <file> : change the ownership of a directory and all the file it contained 

    iii) chown <owner>:<group> <file> : change the ownership and group of a file
   
    vi) chgrp <group> <filename> :  change the group of the a file using chgrp

28) dwrxrwxrwx - i)   dwrx = first set represents the permissions of the owner of the file

                 ii)  rwx = The second set represents the permissions of the members of the group the file is associated to

                 iii) rwx = represents the permissions of the everyone else
                 
                  iv)  -  :means it's a normal file
                       d  :means it's a directory
                       l  :means it's a link

v) rwx : means that specific person has read, write and execution access. Anything that is removed is swapped with - in rwx ex. r-x,rw-,r--
  
vi) can change the permissions given to a file using the chmod command. can be done in 2 ways. 1.Symbolic arguments 2.Numeric arguments
     
	1) Symbolic arguments :a) You type chmod followed by a space, and a letter:
 				               i)  a  :stands for all
 				               ii) u  :stands for user
 				               iii) g  :stands for group
 				               iv) o  :stands for others

			 b)Then you type either + or - to add a permission, or to remove it.

           c) Then you add one or more permission symbols (r,w,x).

			 d) All followed by the file or folder name.

                     ex. chmod a+r filename #everyone can now read
			                chmod a+rw filename #everyone can now read and write
			                chmod o-rwx filename #others (not the owner, not in group)
